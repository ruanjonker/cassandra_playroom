networks:
  cassandra_playroom:
services:
  tools:
    image: cassandra:4.1.5-tools
    build: ./build/tools
    mem_limit: 350m
    cpu_shares: 4
    container_name: tools
    hostname: tools
    networks:
      - cassandra_playroom
    volumes:
      - tools:/reports
  cassandra1:
    extends:
      file: compose/cassandra-common.yml
      service: cassandra
    volumes:
      - cassandra1:/var/lib/cassandra
      - ./config/jmx_prometheus/config.yaml:/opt/jmx_prometheus/config.yaml
    container_name: cassandra1
    hostname: cassandra1
    ports:
      - '9042:9042'
      - '9103:9103'
    environment:
        CASSANDRA_RACK: RACK1
  cassandra2:
    extends:
      file: compose/cassandra-common.yml
      service: cassandra
    volumes:
      - cassandra2:/var/lib/cassandra
      - ./config/jmx_prometheus/config.yaml:/opt/jmx_prometheus/config.yaml
    container_name: cassandra2
    hostname: cassandra2
    ports:
      - '9043:9042'
      - '9104:9103'
    environment:
        CASSANDRA_RACK: RACK2
    depends_on:
      cassandra1:
        condition: service_healthy
  cassandra3:
    extends:
      file: compose/cassandra-common.yml
      service: cassandra
    volumes:
      - cassandra3:/var/lib/cassandra
      - ./config/jmx_prometheus/config.yaml:/opt/jmx_prometheus/config.yaml
    container_name: cassandra3
    hostname: cassandra3
    ports:
      - '9044:9042'
      - '9105:9103'
    environment:
        CASSANDRA_RACK: RACK3
    depends_on:
      cassandra2:
        condition: service_healthy
  reaper:
    image: thelastpickle/cassandra-reaper:latest
    volumes:
      - reaper:/var/log/cassandra-reaper
      - ./config/reaper/cassandra-reaper.yaml:/etc/cassandra-reaper/cassandra-reaper.yml
    container_name: reaper
    restart: unless-stopped
    cpu_shares: 3
    mem_limit: 250m
    hostname: reaper
    networks:
      - cassandra_playroom
    ports:
      - '8080:8080'
      - '8081:8081'
    environment:
        REAPER_JMX_AUTH_USERNAME: reaperUser
        REAPER_JMX_AUTH_PASSWORD: reaperPass
        CRYPTO_SYSTEM_PROPERTY_SECRET: CRYPTO_SECRET
        CRYPTO_SECRET: secret
    depends_on:
      cassandra1:
        condition: service_healthy
      cassandra2:
        condition: service_healthy
      cassandra3:
        condition: service_healthy
  prometheus:
    image: "prom/prometheus"
    container_name: prometheus
    cpu_shares: 2
    mem_limit: 250m
    hostname: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=14d'
      - '--storage.tsdb.allow-overlapping-blocks'
    networks:
      - cassandra_playroom
    ports:
      - '9090:9090'
    volumes:
      - prometheus:/prometheus
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - ./config/prometheus/tg_jmx_prometheus.json:/etc/prometheus/tg_jmx_prometheus.json
      - ./config/prometheus/tg_reaper.json:/etc/prometheus/tg_reaper.json
    depends_on:
      cassandra1:
        condition: service_healthy
      cassandra2:
        condition: service_healthy
      cassandra3:
        condition: service_healthy
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    cpu_shares: 2
    mem_limit: 250m
    hostname: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    networks:
      - cassandra_playroom
    environment:
      GF_INSTALL_PLUGINS: 'grafana-polystat-panel'
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_AUTH_ANONYMOUS_ENABLED: "true"
    volumes:
      - grafana:/var/lib/grafana
      - './config/grafana/prometheus-datasource.yaml:/etc/grafana/provisioning/datasources/prometheus-datasource.yaml'
      - './config/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml'
      - './config/grafana/dashboards:/var/lib/grafana/dashboards'
    depends_on:
      prometheus:
        condition: service_started
volumes:
  cassandra1:
  cassandra2:
  cassandra3:
  prometheus:
  grafana:
  reaper:
  tools: